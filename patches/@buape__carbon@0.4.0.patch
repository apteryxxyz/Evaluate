diff --git a/dist/src/internals/ComponentHandler.js b/dist/src/internals/ComponentHandler.js
index 58b4daa85bc2759a9c478df2ec5c40a6c3ac2efd..f62fa559253abaa18a4bcba177231a09aa4738af 100644
--- a/dist/src/internals/ComponentHandler.js
+++ b/dist/src/internals/ComponentHandler.js
@@ -35,37 +35,37 @@ export class ComponentHandler extends Base {
             const interaction = new ButtonInteraction(this.client, data, { ephemeral: component.ephemeral });
             if (component.defer)
                 await interaction.defer();
-            await component.run(interaction);
+            return await component.run(interaction);
         }
         else if (component instanceof RoleSelectMenu) {
             const interaction = new RoleSelectMenuInteraction(this.client, data, { ephemeral: component.ephemeral });
             if (component.defer)
                 await interaction.defer();
-            await component.run(interaction);
+            return await component.run(interaction);
         }
         else if (component instanceof ChannelSelectMenu) {
             const interaction = new ChannelSelectMenuInteraction(this.client, data, { ephemeral: component.ephemeral });
             if (component.defer)
                 await interaction.defer();
-            await component.run(interaction);
+            return await component.run(interaction);
         }
         else if (component instanceof MentionableSelectMenu) {
             const interaction = new MentionableSelectMenuInteraction(this.client, data, { ephemeral: component.ephemeral });
             if (component.defer)
                 await interaction.defer();
-            await component.run(interaction);
+            return await component.run(interaction);
         }
         else if (component instanceof StringSelectMenu) {
             const interaction = new StringSelectMenuInteraction(this.client, data, { ephemeral: component.ephemeral });
             if (component.defer)
                 await interaction.defer();
-            await component.run(interaction);
+            return await component.run(interaction);
         }
         else if (component instanceof UserSelectMenu) {
             const interaction = new UserSelectMenuInteraction(this.client, data, { ephemeral: component.ephemeral });
             if (component.defer)
                 await interaction.defer();
-            await component.run(interaction);
+            return await component.run(interaction);
         }
         else {
             throw new Error(`Unknown component with type ${data.data.component_type} and custom ID ${data.data.custom_id}`);
diff --git a/dist/src/internals/ModalHandler.js b/dist/src/internals/ModalHandler.js
index cbd3e562d3cd5ad9d7a92f9ff6043906344ff58d..a03876b312902758700d860c25a28667d3f95748 100644
--- a/dist/src/internals/ModalHandler.js
+++ b/dist/src/internals/ModalHandler.js
@@ -19,7 +19,7 @@ export class ModalHandler extends Base {
         const modal = this.modals.find((x) => x.customId === data.data.custom_id);
         if (!modal)
             return false;
-        modal.run(new ModalInteraction(this.client, data, {}));
+        return await modal.run(new ModalInteraction(this.client, data, {}));
     }
 }
 //# sourceMappingURL=ModalHandler.js.map
